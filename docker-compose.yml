version: "2"

networks:
  turnstyl-test-platform:
    driver: "bridge"

services:
  zookeeper:
    restart: always
    networks:
      - turnstyl-test-platform
    logging:
      driver: none
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    restart: always
    logging:
      driver: none
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - turnstyl-test-platform
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 ,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ofelia:
    restart: always
    image: mcuadros/ofelia:latest
    depends_on:
      - nginx
      - kafka
      - financeapp
      - zookeeper
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx:
    logging:
      driver: none
    image: nginx

  financeapp:
    restart: always
    tty: true
    logging:
      driver: local
    build:
      context: .
      dockerfile: Dockerfile
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.financeapp.schedule: "@every 8s"
      ofelia.job-exec.financeapp.command: "ts-node services/eventStreamer.ts"
    networks:
      - turnstyl-test-platform

  consumer:
    restart: "no"
    tty: true
    logging:
      driver: local
    depends_on:
      - financeapp
    build:
      context: .
      dockerfile: Dockerfile
    command: "ts-node consumer.ts"
    networks:
      - turnstyl-test-platform
